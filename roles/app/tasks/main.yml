#SPDX-License-Identifier: MIT-0
---
# tasks file for app
  - name: Install dependencies
    apt:
      name:
        - python3
        - python3-pip
        - python3-venv
        - curl
      state: present
      update_cache: true

  - name: Clone the GitHub repository
    ansible.builtin.git:
      repo: "{{ repo_url }}"
      dest: "{{ app_dir }}"
      version: main

  - name: Create a Python virtual environment
    command: python3 -m venv "{{ virtualenv_dir }}"
    args:
      creates: "{{ virtualenv_dir }}"

  - name: Install Python dependencies
    pip:
      requirements: "{{ app_dir }}/requirements.txt"
      virtualenv: "{{ virtualenv_dir }}"

  - name: Apply migrations
    command: "{{ virtualenv_dir }}/bin/python manage.py migrate"
    args:
      chdir: "{{ app_dir }}"

  - name: Collect static files
    command: "{{ virtualenv_dir }}/bin/python manage.py collectstatic --noinput"
    args:
      chdir: "{{ app_dir }}"

  - name: Check if Django superuser exists
    command: >
      {{ virtualenv_dir }}/bin/python manage.py shell -c
      "from django.contrib.auth import get_user_model; exit(0) if get_user_model().objects.filter(username='admin').exists() else exit(1)"
    args:
      chdir: "{{ app_dir }}"
    register: superuser_check
    ignore_errors: true

  - name: Create Django superuser (non-interactive)
    command: "{{ virtualenv_dir }}/bin/python manage.py createsuperuser --noinput --username=admin --email=admin@example.com"
    args:
      chdir: "{{ app_dir }}"
    environment:
      DJANGO_SUPERUSER_PASSWORD: "adminpassword"
    when: superuser_check.rc != 0


  - name: Start Django development server
    command: "{{ virtualenv_dir }}/bin/python manage.py runserver 127.0.0.1:8000"
    args:
      chdir: "{{ app_dir }}"
    async: 300
    poll: 0

  - name: Check app running
    uri:
      url: http://127.0.0.1:8000/catalog
      status_code: 200
      return_content: yes
    register: app_response
